<div class="flex flex-col h-screen bg-gray-100">
    <div class="flex">
        <aside class="w-64 bg-white shadow-md h-full">
            {{> aside }}
        </aside>
        <main class="flex-1 overflow-y-auto p-6 bg-gray-100">
            

            <div class="bg-white shadow rounded-lg">
                <table class="table-auto w-full text-left border-collapse border border-gray-300">
                    <thead class="bg-gray-100">
                        <tr>
                            <th class="px-4 py-2 border border-gray-300 text-center">Address</th>
                            <th class="px-4 py-2 border border-gray-300 text-center">Date</th>
                            <th class="px-4 py-2 border border-gray-300 text-center">Total Amount</th>
                            <th class="px-4 py-2 border border-gray-300 text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody id="orders-container" class="divide-y divide-gray-200">
                        {{#each orders}}
                        <tr>
                            <td class="px-4 py-2 border border-gray-300">{{this.address}}</td>
                            <td class="px-4 py-2 border border-gray-300">{{this.date}}</td>
                            <td class="px-4 py-2 border border-gray-300 text-center">${{this.total_amount}}</td>
                            <td class="px-4 py-2 border border-gray-300">
                                <button class="bg-blue-500 text-white py-1 px-3 rounded hover:bg-blue-700"
                                    data-order-id="{{this._id}}">
                                    View
                                </button>
                            </td>
                        </tr>
                        {{/each}}
                    </tbody>
                </table>
            </div>
            <div id="pagination-container" class="flex justify-center mt-4"></div>
        </main>
    </div>
    <div>
        {{> footer }}
    </div>
</div>

<script>
    async function fetchAndRenderOrders(url) {
        const ordersContainer = document.getElementById('orders-container');
        const paginationContainer = document.getElementById('pagination-container');

        ordersContainer.innerHTML = '<tr><td colspan="4" class="text-center text-gray-600">Loading...</td></tr>';
        paginationContainer.innerHTML = '';

        try {
            const response = await fetch(url);
            const data = await response.json();

            ordersContainer.innerHTML = '';

            if (response.ok && data.Orders.length > 0) {
                data.Orders.forEach(order => {
                    const orderRow = document.createElement('tr');
                    orderRow.innerHTML = `
                    <td class="px-4 py-2 border border-gray-300">${order.address}</td>
                    <td class="px-4 py-2 border border-gray-300">${order.date}</td>
                    <td class="px-4 py-2 border border-gray-300 text-center">${order.total_amount}</td>
                    <td class="px-4 py-2 border border-gray-300">
                        <button class="bg-blue-500 text-white py-1 px-3 rounded hover:bg-blue-700" 
                                data-order-id="${order._id}">
                            View
                        </button>
                    </td>
                `;
                    ordersContainer.appendChild(orderRow);
                });
                renderPagination(data.totalPages, data.currentPage, url);
            } else {
                ordersContainer.innerHTML = '<tr><td colspan="4" class="text-center text-gray-600">No orders found.</td></tr>';
            }
        } catch (error) {
            console.error('Error fetching orders:', error);
            ordersContainer.innerHTML = '<tr><td colspan="4" class="text-center text-red-500">Failed to load orders. Please try again.</td></tr>';
        }
    }
</script>